{"ast":null,"code":"var _jsxFileName = \"/Users/het2583/Desktop/eats/frontend/src/pages/CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Typography, Box, Grid, Card, CardContent, CardMedia, Button, CircularProgress, TextField, Dialog, DialogTitle, DialogContent, DialogActions, MenuItem, Tabs, Tab } from '@mui/material';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useNotifications } from '../contexts/NotificationContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8000/api';\nconst CustomerDashboard = () => {\n  _s();\n  const [tabValue, setTabValue] = useState(0);\n  const [tiffins, setTiffins] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchCategory, setSearchCategory] = useState('');\n  const [openOrderDialog, setOpenOrderDialog] = useState(false);\n  const [selectedTiffin, setSelectedTiffin] = useState(null);\n  const [orderQuantity, setOrderQuantity] = useState(1);\n  const [deliveryAddress, setDeliveryAddress] = useState('');\n  const [deliveryPincode, setDeliveryPincode] = useState('');\n  const [userPincode, setUserPincode] = useState('');\n  const deliveredOrderIds = useRef(new Set());\n  const {\n    addNotification\n  } = useNotifications();\n  useEffect(() => {\n    fetchUserPincode();\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 5000); // Poll every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  // Notification effect for delivered orders\n  useEffect(() => {\n    const deliveredNow = orders.filter(order => order.status === 'delivered' && !deliveredOrderIds.current.has(order.id));\n    if (deliveredNow.length > 0) {\n      deliveredNow.forEach(order => {\n        addNotification('Your order is delivered successfully.');\n        deliveredOrderIds.current.add(order.id);\n      });\n    }\n    // Also update the ref to include all currently delivered orders (in case of refresh)\n    orders.forEach(order => {\n      if (order.status === 'delivered') {\n        deliveredOrderIds.current.add(order.id);\n      }\n    });\n  }, [orders, addNotification]);\n  const fetchUserPincode = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        setError('Authentication token not found. Please log in.');\n        setLoading(false);\n        return;\n      }\n      const response = await axios.get(`${API_URL}/users/me/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const pincode = response.data.pincode;\n      setUserPincode(pincode);\n      console.log('Customer user pincode fetched:', pincode); // Debug log\n      fetchTiffins(pincode);\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Error fetching customer user data:', error); // Debug log\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Failed to fetch user data');\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to fetch user data');\n      setLoading(false);\n    }\n  };\n  const fetchOrders = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) return;\n      const response = await axios.get(`${API_URL}/orders/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setOrders(response.data.results || response.data);\n    } catch (error) {\n      // Optionally handle error\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const fetchTiffins = async (pincode = '', category = '') => {\n    setLoading(true);\n    setError(null);\n    try {\n      const params = {\n        pincode: pincode || userPincode,\n        search: category\n      };\n      console.log('Fetching tiffins with params:', params); // Debug log\n      const response = await axios.get(`${API_URL}/tiffins/`, {\n        params: params\n      });\n      console.log('Tiffins fetched successfully:', response.data.results); // Debug log\n      setTiffins(response.data.results);\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response4, _error$response4$data;\n      console.error('Error fetching tiffins:', error); // Debug log\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Failed to fetch tiffins. Please try again later.');\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || 'Failed to fetch tiffins.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = () => {\n    fetchTiffins(userPincode, searchCategory);\n  };\n  const handleOpenOrderDialog = tiffin => {\n    setSelectedTiffin(tiffin);\n    setOrderQuantity(1);\n    // Pre-fill delivery address and pincode from user profile if available\n    // For now, assume these are empty or come from some user context\n    setDeliveryAddress('');\n    setDeliveryPincode('');\n    setOpenOrderDialog(true);\n  };\n  const handleCloseOrderDialog = () => {\n    setOpenOrderDialog(false);\n    setSelectedTiffin(null);\n    setOrderQuantity(1);\n    setDeliveryAddress('');\n    setDeliveryPincode('');\n  };\n  const handlePlaceOrder = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        toast.error('Please log in to place an order.');\n        return;\n      }\n      await axios.post(`${API_URL}/orders/`, {\n        tiffin: selectedTiffin.id,\n        quantity: orderQuantity,\n        delivery_address: deliveryAddress,\n        delivery_pincode: deliveryPincode\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast.success('Order placed successfully!');\n      handleCloseOrderDialog();\n      // Optionally refresh tiffins or update UI\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      toast.error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.detail) || 'Failed to place order.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        align: \"center\",\n        sx: {\n          mt: 4\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Order history: show all orders for this customer\n  const orderHistory = orders.slice().sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Customer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider',\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: handleTabChange,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Browse Tiffins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Order History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), tabValue === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3,\n          display: 'flex',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search by Tiffin Name or Description\",\n          variant: \"outlined\",\n          size: \"small\",\n          value: searchCategory,\n          onChange: e => setSearchCategory(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              handleSearch();\n            }\n          },\n          sx: {\n            flexGrow: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: tiffins.length === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"No tiffins found matching your criteria.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this) : tiffins.map(tiffin => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [tiffin.image && /*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"200\",\n              image: tiffin.image,\n              alt: tiffin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: tiffin.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: tiffin.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary\",\n                sx: {\n                  mt: 2\n                },\n                children: [\"\\u20B9\", tiffin.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Provided by: \", tiffin.owner_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mt: 2\n                },\n                onClick: () => handleOpenOrderDialog(tiffin),\n                children: \"Order Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this)\n        }, tiffin.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openOrderDialog,\n        onClose: handleCloseOrderDialog,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [\"Order \", selectedTiffin === null || selectedTiffin === void 0 ? void 0 : selectedTiffin.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              mb: 2\n            },\n            children: [\"Price: \\u20B9\", selectedTiffin === null || selectedTiffin === void 0 ? void 0 : selectedTiffin.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Quantity\",\n            type: \"number\",\n            fullWidth: true,\n            value: orderQuantity,\n            onChange: e => setOrderQuantity(Math.max(1, parseInt(e.target.value) || 1)),\n            sx: {\n              mb: 2\n            },\n            inputProps: {\n              min: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Delivery Address\",\n            fullWidth: true,\n            multiline: true,\n            rows: 3,\n            value: deliveryAddress,\n            onChange: e => setDeliveryAddress(e.target.value),\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Delivery Pincode\",\n            fullWidth: true,\n            value: deliveryPincode,\n            onChange: e => setDeliveryPincode(e.target.value),\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseOrderDialog,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handlePlaceOrder,\n            variant: \"contained\",\n            color: \"primary\",\n            children: [\"Place Order (Total: \\u20B9\", ((selectedTiffin === null || selectedTiffin === void 0 ? void 0 : selectedTiffin.price) || 0) * orderQuantity, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), tabValue === 1 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Order History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: orderHistory.length === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"No orders found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }, this) : orderHistory.map(order => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: [\"Order #\", order.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Tiffin: \", order.tiffin_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Quantity: \", order.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Total Price: \\u20B9\", order.total_price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Status: \", order.status.replace('_', ' ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Ordered on: \", order.created_at ? new Date(order.created_at).toLocaleString() : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this)\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerDashboard, \"0IXoQ0UDeZpVH0MofdVmkKIeAZ0=\", false, function () {\n  return [useNotifications];\n});\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Typography","Box","Grid","Card","CardContent","CardMedia","Button","CircularProgress","TextField","Dialog","DialogTitle","DialogContent","DialogActions","MenuItem","Tabs","Tab","axios","toast","useNotifications","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","CustomerDashboard","_s","tabValue","setTabValue","tiffins","setTiffins","orders","setOrders","loading","setLoading","error","setError","searchCategory","setSearchCategory","openOrderDialog","setOpenOrderDialog","selectedTiffin","setSelectedTiffin","orderQuantity","setOrderQuantity","deliveryAddress","setDeliveryAddress","deliveryPincode","setDeliveryPincode","userPincode","setUserPincode","deliveredOrderIds","Set","addNotification","fetchUserPincode","fetchOrders","interval","setInterval","clearInterval","deliveredNow","filter","order","status","current","has","id","length","forEach","add","token","localStorage","getItem","response","get","headers","Authorization","pincode","data","console","log","fetchTiffins","_error$response","_error$response$data","_error$response2","_error$response2$data","detail","results","handleTabChange","event","newValue","category","params","search","_error$response3","_error$response3$data","_error$response4","_error$response4$data","handleSearch","handleOpenOrderDialog","tiffin","handleCloseOrderDialog","handlePlaceOrder","post","quantity","delivery_address","delivery_pincode","success","_error$response5","_error$response5$data","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","color","align","sx","mt","orderHistory","slice","sort","a","b","Date","created_at","maxWidth","mb","variant","component","gutterBottom","borderBottom","borderColor","value","onChange","label","gap","size","e","target","onKeyPress","key","flexGrow","onClick","container","spacing","item","xs","map","sm","md","image","height","alt","name","description","price","owner_name","open","onClose","fullWidth","type","Math","max","parseInt","inputProps","min","multiline","rows","tiffin_name","total_price","replace","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/het2583/Desktop/eats/frontend/src/pages/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Button,\n  CircularProgress,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  MenuItem,\n  Tabs,\n  Tab,\n} from '@mui/material';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useNotifications } from '../contexts/NotificationContext';\n\nconst API_URL = 'http://localhost:8000/api';\n\nconst CustomerDashboard = () => {\n  const [tabValue, setTabValue] = useState(0);\n  const [tiffins, setTiffins] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchCategory, setSearchCategory] = useState('');\n  const [openOrderDialog, setOpenOrderDialog] = useState(false);\n  const [selectedTiffin, setSelectedTiffin] = useState(null);\n  const [orderQuantity, setOrderQuantity] = useState(1);\n  const [deliveryAddress, setDeliveryAddress] = useState('');\n  const [deliveryPincode, setDeliveryPincode] = useState('');\n  const [userPincode, setUserPincode] = useState('');\n  const deliveredOrderIds = useRef(new Set());\n  const { addNotification } = useNotifications();\n\n  useEffect(() => {\n    fetchUserPincode();\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 5000); // Poll every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  // Notification effect for delivered orders\n  useEffect(() => {\n    const deliveredNow = orders.filter(\n      (order) => order.status === 'delivered' && !deliveredOrderIds.current.has(order.id)\n    );\n    if (deliveredNow.length > 0) {\n      deliveredNow.forEach((order) => {\n        addNotification('Your order is delivered successfully.');\n        deliveredOrderIds.current.add(order.id);\n      });\n    }\n    // Also update the ref to include all currently delivered orders (in case of refresh)\n    orders.forEach((order) => {\n      if (order.status === 'delivered') {\n        deliveredOrderIds.current.add(order.id);\n      }\n    });\n  }, [orders, addNotification]);\n\n  const fetchUserPincode = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        setError('Authentication token not found. Please log in.');\n        setLoading(false);\n        return;\n      }\n      const response = await axios.get(`${API_URL}/users/me/`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const pincode = response.data.pincode;\n      setUserPincode(pincode);\n      console.log('Customer user pincode fetched:', pincode); // Debug log\n      fetchTiffins(pincode);\n    } catch (error) {\n      console.error('Error fetching customer user data:', error); // Debug log\n      setError(error.response?.data?.detail || 'Failed to fetch user data');\n      toast.error(error.response?.data?.detail || 'Failed to fetch user data');\n      setLoading(false);\n    }\n  };\n\n  const fetchOrders = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) return;\n      const response = await axios.get(`${API_URL}/orders/`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setOrders(response.data.results || response.data);\n    } catch (error) {\n      // Optionally handle error\n    }\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const fetchTiffins = async (pincode = '', category = '') => {\n    setLoading(true);\n    setError(null);\n    try {\n      const params = {\n        pincode: pincode || userPincode,\n        search: category,\n      };\n      console.log('Fetching tiffins with params:', params); // Debug log\n      const response = await axios.get(`${API_URL}/tiffins/`, {\n        params: params,\n      });\n      console.log('Tiffins fetched successfully:', response.data.results); // Debug log\n      setTiffins(response.data.results);\n    } catch (error) {\n      console.error('Error fetching tiffins:', error); // Debug log\n      setError(error.response?.data?.detail || 'Failed to fetch tiffins. Please try again later.');\n      toast.error(error.response?.data?.detail || 'Failed to fetch tiffins.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = () => {\n    fetchTiffins(userPincode, searchCategory);\n  };\n\n  const handleOpenOrderDialog = (tiffin) => {\n    setSelectedTiffin(tiffin);\n    setOrderQuantity(1);\n    // Pre-fill delivery address and pincode from user profile if available\n    // For now, assume these are empty or come from some user context\n    setDeliveryAddress('');\n    setDeliveryPincode('');\n    setOpenOrderDialog(true);\n  };\n\n  const handleCloseOrderDialog = () => {\n    setOpenOrderDialog(false);\n    setSelectedTiffin(null);\n    setOrderQuantity(1);\n    setDeliveryAddress('');\n    setDeliveryPincode('');\n  };\n\n  const handlePlaceOrder = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        toast.error('Please log in to place an order.');\n        return;\n      }\n\n      await axios.post(\n        `${API_URL}/orders/`,\n        {\n          tiffin: selectedTiffin.id,\n          quantity: orderQuantity,\n          delivery_address: deliveryAddress,\n          delivery_pincode: deliveryPincode,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      toast.success('Order placed successfully!');\n      handleCloseOrderDialog();\n      // Optionally refresh tiffins or update UI\n    } catch (error) {\n      toast.error(error.response?.data?.detail || 'Failed to place order.');\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container>\n        <Typography color=\"error\" align=\"center\" sx={{ mt: 4 }}>\n          {error}\n        </Typography>\n      </Container>\n    );\n  }\n\n  // Order history: show all orders for this customer\n  const orderHistory = orders.slice().sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Customer Dashboard\n      </Typography>\n\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs value={tabValue} onChange={handleTabChange}>\n          <Tab label=\"Browse Tiffins\" />\n          <Tab label=\"Order History\" />\n        </Tabs>\n      </Box>\n\n      {tabValue === 0 && (\n        <>\n          <Box sx={{ mb: 3, display: 'flex', gap: 2 }}>\n            <TextField\n              label=\"Search by Tiffin Name or Description\"\n              variant=\"outlined\"\n              size=\"small\"\n              value={searchCategory}\n              onChange={(e) => setSearchCategory(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  handleSearch();\n                }\n              }}\n              sx={{ flexGrow: 1 }}\n            />\n            <Button variant=\"contained\" onClick={handleSearch}>\n              Search\n            </Button>\n          </Box>\n\n          <Grid container spacing={3}>\n            {tiffins.length === 0 ? (\n              <Grid item xs={12}>\n                <Typography align=\"center\" color=\"text.secondary\">\n                  No tiffins found matching your criteria.\n                </Typography>\n              </Grid>\n            ) :\n              tiffins.map((tiffin) => (\n                <Grid item key={tiffin.id} xs={12} sm={6} md={4}>\n                  <Card>\n                    {tiffin.image && (\n                      <CardMedia\n                        component=\"img\"\n                        height=\"200\"\n                        image={tiffin.image}\n                        alt={tiffin.name}\n                      />\n                    )}\n                    <CardContent>\n                      <Typography variant=\"h6\" gutterBottom>\n                        {tiffin.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {tiffin.description}\n                      </Typography>\n                      <Typography variant=\"h6\" color=\"primary\" sx={{ mt: 2 }}>\n                        ₹{tiffin.price}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Provided by: {tiffin.owner_name}\n                      </Typography>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        sx={{ mt: 2 }}\n                        onClick={() => handleOpenOrderDialog(tiffin)}\n                      >\n                        Order Now\n                      </Button>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))\n            }\n          </Grid>\n\n          {/* Order Dialog */}\n          <Dialog open={openOrderDialog} onClose={handleCloseOrderDialog} maxWidth=\"sm\" fullWidth>\n            <DialogTitle>Order {selectedTiffin?.name}</DialogTitle>\n            <DialogContent>\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                Price: ₹{selectedTiffin?.price}\n              </Typography>\n              <TextField\n                label=\"Quantity\"\n                type=\"number\"\n                fullWidth\n                value={orderQuantity}\n                onChange={(e) => setOrderQuantity(Math.max(1, parseInt(e.target.value) || 1))}\n                sx={{ mb: 2 }}\n                inputProps={{ min: 1 }}\n              />\n              <TextField\n                label=\"Delivery Address\"\n                fullWidth\n                multiline\n                rows={3}\n                value={deliveryAddress}\n                onChange={(e) => setDeliveryAddress(e.target.value)}\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                label=\"Delivery Pincode\"\n                fullWidth\n                value={deliveryPincode}\n                onChange={(e) => setDeliveryPincode(e.target.value)}\n                sx={{ mb: 2 }}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseOrderDialog}>Cancel</Button>\n              <Button onClick={handlePlaceOrder} variant=\"contained\" color=\"primary\">\n                Place Order (Total: ₹{(selectedTiffin?.price || 0) * orderQuantity})\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      )}\n\n      {tabValue === 1 && (\n        <Box>\n          <Typography variant=\"h5\" gutterBottom>Order History</Typography>\n          <Grid container spacing={3}>\n            {orderHistory.length === 0 ? (\n              <Grid item xs={12}>\n                <Typography align=\"center\" color=\"text.secondary\">\n                  No orders found.\n                </Typography>\n              </Grid>\n            ) : orderHistory.map((order) => (\n              <Grid item xs={12} sm={6} md={4} key={order.id}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Order #{order.id}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Tiffin: {order.tiffin_name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Quantity: {order.quantity}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Total Price: ₹{order.total_price}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Status: {order.status.replace('_', ' ')}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Ordered on: {order.created_at ? new Date(order.created_at).toLocaleString() : ''}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nexport default CustomerDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}