{"ast":null,"code":"var _jsxFileName = \"/Users/het2583/Desktop/eats/frontend/src/pages/CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Typography, Box, Grid, Card, CardContent, CardMedia, Button, CircularProgress, TextField, Dialog, DialogTitle, DialogContent, DialogActions, MenuItem, Tabs, Tab } from '@mui/material';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useNotifications } from '../contexts/NotificationContext';\nimport Pagination from '@mui/material/Pagination';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8000/api';\nconst CustomerDashboard = () => {\n  _s();\n  const [tabValue, setTabValue] = useState(0);\n  const [tiffins, setTiffins] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchCategory, setSearchCategory] = useState('');\n  const [openOrderDialog, setOpenOrderDialog] = useState(false);\n  const [selectedTiffin, setSelectedTiffin] = useState(null);\n  const [orderQuantity, setOrderQuantity] = useState(1);\n  const [deliveryAddress, setDeliveryAddress] = useState('');\n  const [deliveryPincode, setDeliveryPincode] = useState('');\n  const [userPincode, setUserPincode] = useState('');\n  const deliveredOrderIds = useRef(new Set());\n  const prevOrdersRef = useRef([]);\n  const {\n    addNotification,\n    notifications,\n    clearNotifications\n  } = useNotifications();\n  const [orderHistoryPage, setOrderHistoryPage] = useState(1);\n  const pageSize = 10;\n  const orderHistoryAll = orders.filter(order => ['delivered', 'cancelled', 'ready_for_delivery', 'picked_up'].includes(order.status)).sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n  const totalOrderHistoryPages = Math.max(1, Math.ceil(orderHistoryAll.length / pageSize));\n  const paginatedOrderHistory = orderHistoryAll.slice((orderHistoryPage - 1) * pageSize, orderHistoryPage * pageSize);\n  const ownerTiffinIds = tiffins.map(t => t.id);\n  const activeOrdersAll = orders.filter(order => ownerTiffinIds.includes(order.tiffin) && ['pending', 'confirmed', 'preparing'].includes(order.status));\n  const totalActivePages = Math.max(1, Math.ceil(activeOrdersAll.length / pageSize));\n  useEffect(() => {\n    fetchUserPincode();\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 5000); // Poll every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    if (prevOrdersRef.current.length > 0) {\n      // Map previous orders by id for quick lookup\n      const prevMap = {};\n      prevOrdersRef.current.forEach(order => {\n        prevMap[order.id] = order.status;\n      });\n      orders.forEach(order => {\n        if (order.status === 'delivered' && prevMap[order.id] && prevMap[order.id] !== 'delivered') {\n          addNotification('Your order is delivered successfully.');\n        }\n      });\n    }\n    prevOrdersRef.current = orders;\n  }, [orders, addNotification]);\n\n  // On mount and after fetching orders, notify for delivered orders if not already notified\n  useEffect(() => {\n    console.log('Checking for delivered orders', orders);\n    if (!orders || orders.length === 0) return;\n    // Get notified order IDs from localStorage\n    const notifiedIds = JSON.parse(localStorage.getItem('delivered_notified_ids') || '[]');\n    let updated = false;\n    orders.forEach(order => {\n      if (order.status === 'delivered' && !notifiedIds.includes(order.id)) {\n        console.log('Adding notification for order', order.id);\n        addNotification('Your order is delivered successfully.');\n        notifiedIds.push(order.id);\n        updated = true;\n      }\n    });\n    if (updated) {\n      console.log('Updated notifiedIds:', notifiedIds);\n      localStorage.setItem('delivered_notified_ids', JSON.stringify(notifiedIds));\n    }\n  }, [orders, addNotification]);\n  useEffect(() => {\n    if (orderHistoryPage > totalOrderHistoryPages) setOrderHistoryPage(1);\n  }, [totalOrderHistoryPages]);\n  useEffect(() => {\n    // For every active order, if there is no notification for it, add one\n    activeOrdersAll.forEach(order => {\n      const notifMsg = `You received a new order for your tiffin: ${order.tiffin_name} (Order #${order.id})`;\n      const alreadyNotified = notifications.some(n => n.message === notifMsg);\n      if (!alreadyNotified) {\n        addNotification(notifMsg);\n        console.log('Adding notification for order:', order.id, order.tiffin_name);\n      }\n    });\n  }, [activeOrdersAll, notifications, addNotification]);\n  const fetchUserPincode = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        setError('Authentication token not found. Please log in.');\n        setLoading(false);\n        return;\n      }\n      const response = await axios.get(`${API_URL}/users/me/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const pincode = response.data.pincode;\n      setUserPincode(pincode);\n      console.log('Customer user pincode fetched:', pincode); // Debug log\n      fetchTiffins(pincode);\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Error fetching customer user data:', error); // Debug log\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Failed to fetch user data');\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to fetch user data');\n      setLoading(false);\n    }\n  };\n  const fetchOrders = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) return;\n      let allOrders = [];\n      let nextUrl = `${API_URL}/orders/`;\n      while (nextUrl) {\n        const response = await axios.get(nextUrl, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        allOrders = allOrders.concat(response.data.results);\n        nextUrl = response.data.next;\n      }\n      setOrders(allOrders);\n    } catch (error) {\n      // Optionally handle error\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const fetchTiffins = async (pincode = '', category = '') => {\n    setLoading(true);\n    setError(null);\n    try {\n      const params = {\n        pincode: pincode || userPincode,\n        search: category\n      };\n      console.log('Fetching tiffins with params:', params); // Debug log\n      const response = await axios.get(`${API_URL}/tiffins/`, {\n        params: params\n      });\n      console.log('Tiffins fetched successfully:', response.data.results); // Debug log\n      setTiffins(response.data.results);\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response4, _error$response4$data;\n      console.error('Error fetching tiffins:', error); // Debug log\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Failed to fetch tiffins. Please try again later.');\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || 'Failed to fetch tiffins.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = () => {\n    fetchTiffins(userPincode, searchCategory);\n  };\n  const handleOpenOrderDialog = tiffin => {\n    setSelectedTiffin(tiffin);\n    setOrderQuantity(1);\n    // Pre-fill delivery address and pincode from user profile if available\n    // For now, assume these are empty or come from some user context\n    setDeliveryAddress('');\n    setDeliveryPincode('');\n    setOpenOrderDialog(true);\n  };\n  const handleCloseOrderDialog = () => {\n    setOpenOrderDialog(false);\n    setSelectedTiffin(null);\n    setOrderQuantity(1);\n    setDeliveryAddress('');\n    setDeliveryPincode('');\n  };\n  const handlePlaceOrder = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        toast.error('Please log in to place an order.');\n        return;\n      }\n      await axios.post(`${API_URL}/orders/`, {\n        tiffin: selectedTiffin.id,\n        quantity: orderQuantity,\n        delivery_address: deliveryAddress,\n        delivery_pincode: deliveryPincode\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast.success('Order placed successfully!');\n      addNotification('Your order is placed successfully.');\n      handleCloseOrderDialog();\n      // Optionally refresh tiffins or update UI\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      toast.error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.detail) || 'Failed to place order.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        align: \"center\",\n        sx: {\n          mt: 4\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this);\n  }\n  const handleOrderHistoryPageChange = (event, value) => {\n    setOrderHistoryPage(value);\n  };\n  console.log('OwnerDashboard notifications context:', notifications);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Customer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider',\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: handleTabChange,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Browse Tiffins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Order History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), tabValue === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3,\n          display: 'flex',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search by Tiffin Name or Description\",\n          variant: \"outlined\",\n          size: \"small\",\n          value: searchCategory,\n          onChange: e => setSearchCategory(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              handleSearch();\n            }\n          },\n          sx: {\n            flexGrow: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: tiffins.length === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"No tiffins found matching your criteria.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this) : tiffins.map(tiffin => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [tiffin.image && /*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"200\",\n              image: tiffin.image,\n              alt: tiffin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: tiffin.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: tiffin.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary\",\n                sx: {\n                  mt: 2\n                },\n                children: [\"\\u20B9\", tiffin.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Provided by: \", tiffin.owner_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mt: 2\n                },\n                onClick: () => handleOpenOrderDialog(tiffin),\n                children: \"Order Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 19\n          }, this)\n        }, tiffin.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openOrderDialog,\n        onClose: handleCloseOrderDialog,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [\"Order \", selectedTiffin === null || selectedTiffin === void 0 ? void 0 : selectedTiffin.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              mb: 2\n            },\n            children: [\"Price: \\u20B9\", selectedTiffin === null || selectedTiffin === void 0 ? void 0 : selectedTiffin.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Quantity\",\n            type: \"number\",\n            fullWidth: true,\n            value: orderQuantity,\n            onChange: e => setOrderQuantity(Math.max(1, parseInt(e.target.value) || 1)),\n            sx: {\n              mb: 2\n            },\n            inputProps: {\n              min: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Delivery Address\",\n            fullWidth: true,\n            multiline: true,\n            rows: 3,\n            value: deliveryAddress,\n            onChange: e => setDeliveryAddress(e.target.value),\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Delivery Pincode\",\n            fullWidth: true,\n            value: deliveryPincode,\n            onChange: e => setDeliveryPincode(e.target.value),\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseOrderDialog,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handlePlaceOrder,\n            variant: \"contained\",\n            color: \"primary\",\n            children: [\"Place Order (Total: \\u20B9\", ((selectedTiffin === null || selectedTiffin === void 0 ? void 0 : selectedTiffin.price) || 0) * orderQuantity, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), tabValue === 1 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Order History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: paginatedOrderHistory.length === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"No orders found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 15\n        }, this) : paginatedOrderHistory.map(order => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: [\"Order #\", order.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Tiffin: \", order.tiffin_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Quantity: \", order.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Total Price: \\u20B9\", order.total_price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Status: \", order.status.replace('_', ' ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Ordered on: \", order.created_at ? new Date(order.created_at).toLocaleString() : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 19\n          }, this)\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), totalOrderHistoryPages > 1 && /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        mt: 4,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: totalOrderHistoryPages,\n          page: orderHistoryPage,\n          onChange: handleOrderHistoryPageChange,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this), tabValue === 2 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"error\",\n        onClick: clearNotifications,\n        sx: {\n          mb: 2\n        },\n        children: \"Clear Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"No notifications.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 13\n      }, this) : notifications.map(notif => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2,\n          p: 2,\n          border: '1px solid #eee',\n          borderRadius: 2,\n          background: notif.read ? '#fafafa' : '#e3f2fd'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: notif.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            color: '#888'\n          },\n          children: new Date(notif.timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 17\n        }, this)]\n      }, notif.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerDashboard, \"SMfGwXlR62clTi/s45FdoihJvNs=\", false, function () {\n  return [useNotifications];\n});\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Typography","Box","Grid","Card","CardContent","CardMedia","Button","CircularProgress","TextField","Dialog","DialogTitle","DialogContent","DialogActions","MenuItem","Tabs","Tab","axios","toast","useNotifications","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","CustomerDashboard","_s","tabValue","setTabValue","tiffins","setTiffins","orders","setOrders","loading","setLoading","error","setError","searchCategory","setSearchCategory","openOrderDialog","setOpenOrderDialog","selectedTiffin","setSelectedTiffin","orderQuantity","setOrderQuantity","deliveryAddress","setDeliveryAddress","deliveryPincode","setDeliveryPincode","userPincode","setUserPincode","deliveredOrderIds","Set","prevOrdersRef","addNotification","notifications","clearNotifications","orderHistoryPage","setOrderHistoryPage","pageSize","orderHistoryAll","filter","order","includes","status","sort","a","b","Date","created_at","totalOrderHistoryPages","Math","max","ceil","length","paginatedOrderHistory","slice","ownerTiffinIds","map","t","id","activeOrdersAll","tiffin","totalActivePages","fetchUserPincode","fetchOrders","interval","setInterval","clearInterval","current","prevMap","forEach","console","log","notifiedIds","JSON","parse","localStorage","getItem","updated","push","setItem","stringify","notifMsg","tiffin_name","alreadyNotified","some","n","message","token","response","get","headers","Authorization","pincode","data","fetchTiffins","_error$response","_error$response$data","_error$response2","_error$response2$data","detail","allOrders","nextUrl","concat","results","next","handleTabChange","event","newValue","category","params","search","_error$response3","_error$response3$data","_error$response4","_error$response4$data","handleSearch","handleOpenOrderDialog","handleCloseOrderDialog","handlePlaceOrder","post","quantity","delivery_address","delivery_pincode","success","_error$response5","_error$response5$data","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","color","align","sx","mt","handleOrderHistoryPageChange","value","maxWidth","mb","variant","component","gutterBottom","borderBottom","borderColor","onChange","label","gap","size","e","target","onKeyPress","key","flexGrow","onClick","container","spacing","item","xs","sm","md","image","height","alt","name","description","price","owner_name","open","onClose","fullWidth","type","parseInt","inputProps","min","multiline","rows","total_price","replace","toLocaleString","count","page","notif","p","border","borderRadius","background","read","style","fontSize","timestamp","_c","$RefreshReg$"],"sources":["/Users/het2583/Desktop/eats/frontend/src/pages/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Button,\n  CircularProgress,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  MenuItem,\n  Tabs,\n  Tab,\n} from '@mui/material';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useNotifications } from '../contexts/NotificationContext';\nimport Pagination from '@mui/material/Pagination';\n\nconst API_URL = 'http://localhost:8000/api';\n\nconst CustomerDashboard = () => {\n  const [tabValue, setTabValue] = useState(0);\n  const [tiffins, setTiffins] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchCategory, setSearchCategory] = useState('');\n  const [openOrderDialog, setOpenOrderDialog] = useState(false);\n  const [selectedTiffin, setSelectedTiffin] = useState(null);\n  const [orderQuantity, setOrderQuantity] = useState(1);\n  const [deliveryAddress, setDeliveryAddress] = useState('');\n  const [deliveryPincode, setDeliveryPincode] = useState('');\n  const [userPincode, setUserPincode] = useState('');\n  const deliveredOrderIds = useRef(new Set());\n  const prevOrdersRef = useRef([]);\n  const { addNotification, notifications, clearNotifications } = useNotifications();\n  const [orderHistoryPage, setOrderHistoryPage] = useState(1);\n  const pageSize = 10;\n\n  const orderHistoryAll = orders\n    .filter(order => ['delivered', 'cancelled', 'ready_for_delivery', 'picked_up'].includes(order.status))\n    .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n  const totalOrderHistoryPages = Math.max(1, Math.ceil(orderHistoryAll.length / pageSize));\n  const paginatedOrderHistory = orderHistoryAll.slice((orderHistoryPage - 1) * pageSize, orderHistoryPage * pageSize);\n\n  const ownerTiffinIds = tiffins.map(t => t.id);\n  const activeOrdersAll = orders.filter(\n    order => ownerTiffinIds.includes(order.tiffin) && ['pending', 'confirmed', 'preparing'].includes(order.status)\n  );\n  const totalActivePages = Math.max(1, Math.ceil(activeOrdersAll.length / pageSize));\n\n  useEffect(() => {\n    fetchUserPincode();\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 5000); // Poll every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (prevOrdersRef.current.length > 0) {\n      // Map previous orders by id for quick lookup\n      const prevMap = {};\n      prevOrdersRef.current.forEach(order => {\n        prevMap[order.id] = order.status;\n      });\n      orders.forEach(order => {\n        if (\n          order.status === 'delivered' &&\n          prevMap[order.id] && prevMap[order.id] !== 'delivered'\n        ) {\n          addNotification('Your order is delivered successfully.');\n        }\n      });\n    }\n    prevOrdersRef.current = orders;\n  }, [orders, addNotification]);\n\n  // On mount and after fetching orders, notify for delivered orders if not already notified\n  useEffect(() => {\n    console.log('Checking for delivered orders', orders);\n    if (!orders || orders.length === 0) return;\n    // Get notified order IDs from localStorage\n    const notifiedIds = JSON.parse(localStorage.getItem('delivered_notified_ids') || '[]');\n    let updated = false;\n    orders.forEach(order => {\n      if (order.status === 'delivered' && !notifiedIds.includes(order.id)) {\n        console.log('Adding notification for order', order.id);\n        addNotification('Your order is delivered successfully.');\n        notifiedIds.push(order.id);\n        updated = true;\n      }\n    });\n    if (updated) {\n      console.log('Updated notifiedIds:', notifiedIds);\n      localStorage.setItem('delivered_notified_ids', JSON.stringify(notifiedIds));\n    }\n  }, [orders, addNotification]);\n\n  useEffect(() => {\n    if (orderHistoryPage > totalOrderHistoryPages) setOrderHistoryPage(1);\n  }, [totalOrderHistoryPages]);\n\n  useEffect(() => {\n    // For every active order, if there is no notification for it, add one\n    activeOrdersAll.forEach(order => {\n      const notifMsg = `You received a new order for your tiffin: ${order.tiffin_name} (Order #${order.id})`;\n      const alreadyNotified = notifications.some(n => n.message === notifMsg);\n      if (!alreadyNotified) {\n        addNotification(notifMsg);\n        console.log('Adding notification for order:', order.id, order.tiffin_name);\n      }\n    });\n  }, [activeOrdersAll, notifications, addNotification]);\n\n  const fetchUserPincode = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        setError('Authentication token not found. Please log in.');\n        setLoading(false);\n        return;\n      }\n      const response = await axios.get(`${API_URL}/users/me/`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const pincode = response.data.pincode;\n      setUserPincode(pincode);\n      console.log('Customer user pincode fetched:', pincode); // Debug log\n      fetchTiffins(pincode);\n    } catch (error) {\n      console.error('Error fetching customer user data:', error); // Debug log\n      setError(error.response?.data?.detail || 'Failed to fetch user data');\n      toast.error(error.response?.data?.detail || 'Failed to fetch user data');\n      setLoading(false);\n    }\n  };\n\n  const fetchOrders = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) return;\n      let allOrders = [];\n      let nextUrl = `${API_URL}/orders/`;\n      while (nextUrl) {\n        const response = await axios.get(nextUrl, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        allOrders = allOrders.concat(response.data.results);\n        nextUrl = response.data.next;\n      }\n      setOrders(allOrders);\n    } catch (error) {\n      // Optionally handle error\n    }\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const fetchTiffins = async (pincode = '', category = '') => {\n    setLoading(true);\n    setError(null);\n    try {\n      const params = {\n        pincode: pincode || userPincode,\n        search: category,\n      };\n      console.log('Fetching tiffins with params:', params); // Debug log\n      const response = await axios.get(`${API_URL}/tiffins/`, {\n        params: params,\n      });\n      console.log('Tiffins fetched successfully:', response.data.results); // Debug log\n      setTiffins(response.data.results);\n    } catch (error) {\n      console.error('Error fetching tiffins:', error); // Debug log\n      setError(error.response?.data?.detail || 'Failed to fetch tiffins. Please try again later.');\n      toast.error(error.response?.data?.detail || 'Failed to fetch tiffins.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = () => {\n    fetchTiffins(userPincode, searchCategory);\n  };\n\n  const handleOpenOrderDialog = (tiffin) => {\n    setSelectedTiffin(tiffin);\n    setOrderQuantity(1);\n    // Pre-fill delivery address and pincode from user profile if available\n    // For now, assume these are empty or come from some user context\n    setDeliveryAddress('');\n    setDeliveryPincode('');\n    setOpenOrderDialog(true);\n  };\n\n  const handleCloseOrderDialog = () => {\n    setOpenOrderDialog(false);\n    setSelectedTiffin(null);\n    setOrderQuantity(1);\n    setDeliveryAddress('');\n    setDeliveryPincode('');\n  };\n\n  const handlePlaceOrder = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        toast.error('Please log in to place an order.');\n        return;\n      }\n\n      await axios.post(\n        `${API_URL}/orders/`,\n        {\n          tiffin: selectedTiffin.id,\n          quantity: orderQuantity,\n          delivery_address: deliveryAddress,\n          delivery_pincode: deliveryPincode,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      toast.success('Order placed successfully!');\n      addNotification('Your order is placed successfully.');\n      handleCloseOrderDialog();\n      // Optionally refresh tiffins or update UI\n    } catch (error) {\n      toast.error(error.response?.data?.detail || 'Failed to place order.');\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container>\n        <Typography color=\"error\" align=\"center\" sx={{ mt: 4 }}>\n          {error}\n        </Typography>\n      </Container>\n    );\n  }\n\n  const handleOrderHistoryPageChange = (event, value) => {\n    setOrderHistoryPage(value);\n  };\n\n  console.log('OwnerDashboard notifications context:', notifications);\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Customer Dashboard\n      </Typography>\n\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs value={tabValue} onChange={handleTabChange}>\n          <Tab label=\"Browse Tiffins\" />\n          <Tab label=\"Order History\" />\n          <Tab label=\"Notifications\" />\n        </Tabs>\n      </Box>\n\n      {tabValue === 0 && (\n        <>\n          <Box sx={{ mb: 3, display: 'flex', gap: 2 }}>\n            <TextField\n              label=\"Search by Tiffin Name or Description\"\n              variant=\"outlined\"\n              size=\"small\"\n              value={searchCategory}\n              onChange={(e) => setSearchCategory(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  handleSearch();\n                }\n              }}\n              sx={{ flexGrow: 1 }}\n            />\n            <Button variant=\"contained\" onClick={handleSearch}>\n              Search\n            </Button>\n          </Box>\n\n          <Grid container spacing={3}>\n            {tiffins.length === 0 ? (\n              <Grid item xs={12}>\n                <Typography align=\"center\" color=\"text.secondary\">\n                  No tiffins found matching your criteria.\n                </Typography>\n              </Grid>\n            ) :\n              tiffins.map((tiffin) => (\n                <Grid item key={tiffin.id} xs={12} sm={6} md={4}>\n                  <Card>\n                    {tiffin.image && (\n                      <CardMedia\n                        component=\"img\"\n                        height=\"200\"\n                        image={tiffin.image}\n                        alt={tiffin.name}\n                      />\n                    )}\n                    <CardContent>\n                      <Typography variant=\"h6\" gutterBottom>\n                        {tiffin.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {tiffin.description}\n                      </Typography>\n                      <Typography variant=\"h6\" color=\"primary\" sx={{ mt: 2 }}>\n                        ₹{tiffin.price}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Provided by: {tiffin.owner_name}\n                      </Typography>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        sx={{ mt: 2 }}\n                        onClick={() => handleOpenOrderDialog(tiffin)}\n                      >\n                        Order Now\n                      </Button>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))\n            }\n          </Grid>\n\n          {/* Order Dialog */}\n          <Dialog open={openOrderDialog} onClose={handleCloseOrderDialog} maxWidth=\"sm\" fullWidth>\n            <DialogTitle>Order {selectedTiffin?.name}</DialogTitle>\n            <DialogContent>\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                Price: ₹{selectedTiffin?.price}\n              </Typography>\n              <TextField\n                label=\"Quantity\"\n                type=\"number\"\n                fullWidth\n                value={orderQuantity}\n                onChange={(e) => setOrderQuantity(Math.max(1, parseInt(e.target.value) || 1))}\n                sx={{ mb: 2 }}\n                inputProps={{ min: 1 }}\n              />\n              <TextField\n                label=\"Delivery Address\"\n                fullWidth\n                multiline\n                rows={3}\n                value={deliveryAddress}\n                onChange={(e) => setDeliveryAddress(e.target.value)}\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                label=\"Delivery Pincode\"\n                fullWidth\n                value={deliveryPincode}\n                onChange={(e) => setDeliveryPincode(e.target.value)}\n                sx={{ mb: 2 }}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseOrderDialog}>Cancel</Button>\n              <Button onClick={handlePlaceOrder} variant=\"contained\" color=\"primary\">\n                Place Order (Total: ₹{(selectedTiffin?.price || 0) * orderQuantity})\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      )}\n\n      {tabValue === 1 && (\n        <Box>\n          <Typography variant=\"h5\" gutterBottom>Order History</Typography>\n          <Grid container spacing={3}>\n            {paginatedOrderHistory.length === 0 ? (\n              <Grid item xs={12}>\n                <Typography align=\"center\" color=\"text.secondary\">\n                  No orders found.\n                </Typography>\n              </Grid>\n            ) : (\n              paginatedOrderHistory.map((order) => (\n                <Grid item xs={12} sm={6} md={4} key={order.id}>\n                  <Card>\n                    <CardContent>\n                      <Typography variant=\"h6\" gutterBottom>\n                        Order #{order.id}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Tiffin: {order.tiffin_name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Quantity: {order.quantity}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Total Price: ₹{order.total_price}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Status: {order.status.replace('_', ' ')}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Ordered on: {order.created_at ? new Date(order.created_at).toLocaleString() : ''}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))\n            )}\n          </Grid>\n          {totalOrderHistoryPages > 1 && (\n            <Box display=\"flex\" justifyContent=\"center\" mt={4}>\n              <Pagination count={totalOrderHistoryPages} page={orderHistoryPage} onChange={handleOrderHistoryPageChange} color=\"primary\" />\n            </Box>\n          )}\n        </Box>\n      )}\n\n      {tabValue === 2 && (\n        <Box>\n          <Typography variant=\"h5\" gutterBottom>Notifications</Typography>\n          <Button variant=\"outlined\" color=\"error\" onClick={clearNotifications} sx={{ mb: 2 }}>\n            Clear Notifications\n          </Button>\n          {notifications.length === 0 ? (\n            <Typography color=\"text.secondary\">No notifications.</Typography>\n          ) : (\n            notifications.map((notif) => (\n              <Box key={notif.id} sx={{ mb: 2, p: 2, border: '1px solid #eee', borderRadius: 2, background: notif.read ? '#fafafa' : '#e3f2fd' }}>\n                <div>{notif.message}</div>\n                <div style={{ fontSize: 12, color: '#888' }}>{new Date(notif.timestamp).toLocaleString()}</div>\n              </Box>\n            ))\n          )}\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nexport default CustomerDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}