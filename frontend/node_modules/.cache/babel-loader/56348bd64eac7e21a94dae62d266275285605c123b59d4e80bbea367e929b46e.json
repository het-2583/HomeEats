{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nconst API_URL = 'http://localhost:8000/api';\n\n// Async thunks\nexport const login = createAsyncThunk('auth/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_URL}/token/`, credentials);\n    localStorage.setItem('access_token', response.data.access);\n    localStorage.setItem('refresh_token', response.data.refresh);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const register = createAsyncThunk('auth/register', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_URL}/users/`, userData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const fetchUserProfile = createAsyncThunk('auth/fetchUserProfile', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const response = await axios.get(`${API_URL}/users/me/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      state.isAuthenticated = false;\n      state.user = null;\n      state.error = null;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      toast.success('Login successful!');\n    }).addCase(login.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = action.payload;\n      toast.error(((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.detail) || 'Login failed');\n    })\n    // Register\n    .addCase(register.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.loading = false;\n      toast.success('Registration successful! Please login.');\n    }).addCase(register.rejected, (state, action) => {\n      var _action$payload2;\n      state.loading = false;\n      state.error = action.payload;\n      toast.error(((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.detail) || 'Registration failed');\n    })\n    // Fetch User Profile\n    .addCase(fetchUserProfile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n      state.user = null;\n      toast.error('Failed to fetch user profile');\n    });\n  }\n});\nexport const {\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","toast","API_URL","login","credentials","rejectWithValue","response","post","localStorage","setItem","data","access","refresh","error","register","userData","fetchUserProfile","_","token","getItem","get","headers","Authorization","initialState","isAuthenticated","user","loading","authSlice","name","reducers","logout","state","removeItem","clearError","extraReducers","builder","addCase","pending","fulfilled","action","success","rejected","_action$payload","payload","detail","_action$payload2","actions","reducer"],"sources":["/Users/het2583/Desktop/eats/frontend/src/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_URL = 'http://localhost:8000/api';\n\n// Async thunks\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(`${API_URL}/token/`, credentials);\n      localStorage.setItem('access_token', response.data.access);\n      localStorage.setItem('refresh_token', response.data.refresh);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(`${API_URL}/users/`, userData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const fetchUserProfile = createAsyncThunk(\n  'auth/fetchUserProfile',\n  async (_, { rejectWithValue }) => {\n    try {\n      const token = localStorage.getItem('access_token');\n      const response = await axios.get(`${API_URL}/users/me/`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      state.isAuthenticated = false;\n      state.user = null;\n      state.error = null;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Login\n      .addCase(login.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = true;\n        toast.success('Login successful!');\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        toast.error(action.payload?.detail || 'Login failed');\n      })\n      // Register\n      .addCase(register.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.loading = false;\n        toast.success('Registration successful! Please login.');\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        toast.error(action.payload?.detail || 'Registration failed');\n      })\n      // Fetch User Profile\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload;\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        state.isAuthenticated = false;\n        state.user = null;\n        toast.error('Failed to fetch user profile');\n      });\n  },\n});\n\nexport const { logout, clearError } = authSlice.actions;\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}