{"ast":null,"code":"var _jsxFileName = \"/Users/het2583/Desktop/eats/frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Container, Box, Typography, TextField, Button, Link, Paper, CircularProgress } from '@mui/material';\nimport { login, fetchUserProfile } from '../redux/slices/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required')\n});\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error\n  } = useSelector(state => state.auth);\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema,\n    onSubmit: async values => {\n      const result = await dispatch(login(values));\n      if (!result.error) {\n        // Fetch user profile to get user type\n        const profileResult = await dispatch(fetchUserProfile());\n        if (!profileResult.error) {\n          // Navigate based on user type\n          switch (profileResult.payload.user_type) {\n            case 'customer':\n              navigate('/customer-dashboard');\n              break;\n            case 'owner':\n              navigate('/owner-dashboard');\n              break;\n            case 'delivery':\n              navigate('/delivery-dashboard');\n              break;\n            default:\n              navigate('/');\n          }\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          width: '100%',\n          borderRadius: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Login to Home Eats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: formik.handleSubmit,\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"username\",\n            name: \"username\",\n            label: \"Username\",\n            value: formik.values.username,\n            onChange: formik.handleChange,\n            error: formik.touched.username && Boolean(formik.errors.username),\n            helperText: formik.touched.username && formik.errors.username,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"password\",\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            value: formik.values.password,\n            onChange: formik.handleChange,\n            error: formik.touched.password && Boolean(formik.errors.password),\n            helperText: formik.touched.password && formik.errors.password,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            align: \"center\",\n            sx: {\n              mt: 2\n            },\n            children: error.detail || 'Login failed'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            disabled: loading,\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 26\n            }, this) : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                component: RouterLink,\n                to: \"/register\",\n                children: \"Register here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"uVHpFFASYTj+4KxnDHUHXIW+eHE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useFormik];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","Link","RouterLink","useDispatch","useSelector","useFormik","Yup","Container","Box","Typography","TextField","Button","Paper","CircularProgress","login","fetchUserProfile","jsxDEV","_jsxDEV","validationSchema","object","username","string","required","password","Login","_s","navigate","dispatch","loading","error","state","auth","formik","initialValues","onSubmit","values","result","profileResult","payload","user_type","maxWidth","children","sx","mt","display","flexDirection","alignItems","elevation","p","width","borderRadius","component","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","fullWidth","id","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","margin","type","color","detail","size","disabled","mb","textAlign","to","_c","$RefreshReg$"],"sources":["/Users/het2583/Desktop/eats/frontend/src/pages/Login.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Container,\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Link,\n  Paper,\n  CircularProgress,\n} from '@mui/material';\nimport { login, fetchUserProfile } from '../redux/slices/authSlice';\n\nconst validationSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required'),\n});\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector((state) => state.auth);\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n    },\n    validationSchema,\n    onSubmit: async (values) => {\n      const result = await dispatch(login(values));\n      if (!result.error) {\n        // Fetch user profile to get user type\n        const profileResult = await dispatch(fetchUserProfile());\n        if (!profileResult.error) {\n          // Navigate based on user type\n          switch (profileResult.payload.user_type) {\n            case 'customer':\n              navigate('/customer-dashboard');\n              break;\n            case 'owner':\n              navigate('/owner-dashboard');\n              break;\n            case 'delivery':\n              navigate('/delivery-dashboard');\n              break;\n            default:\n              navigate('/');\n          }\n        }\n      }\n    },\n  });\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        sx={{\n          mt: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Paper\n          elevation={3}\n          sx={{\n            p: 4,\n            width: '100%',\n            borderRadius: 2,\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\" gutterBottom>\n            Login to Home Eats\n          </Typography>\n\n          <Box\n            component=\"form\"\n            onSubmit={formik.handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <TextField\n              fullWidth\n              id=\"username\"\n              name=\"username\"\n              label=\"Username\"\n              value={formik.values.username}\n              onChange={formik.handleChange}\n              error={formik.touched.username && Boolean(formik.errors.username)}\n              helperText={formik.touched.username && formik.errors.username}\n              margin=\"normal\"\n            />\n\n            <TextField\n              fullWidth\n              id=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n              margin=\"normal\"\n            />\n\n            {error && (\n              <Typography color=\"error\" align=\"center\" sx={{ mt: 2 }}>\n                {error.detail || 'Login failed'}\n              </Typography>\n            )}\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              size=\"large\"\n              disabled={loading}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              {loading ? <CircularProgress size={24} /> : 'Login'}\n            </Button>\n\n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"body2\">\n                Don't have an account?{' '}\n                <Link component={RouterLink} to=\"/register\">\n                  Register here\n                </Link>\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}